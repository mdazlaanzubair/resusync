export const prompt = {
  resumeAnalysis: (jobDesc, resumeJSON) => {
    return `As an experienced Applicant Tracking System (ATS) analyst, and more than 20 years of experience as a Hiring manager and technical recruiter and talent acquisition, with profound knowledge in technology, software engineering, data science, full stack web development, cloud engineer, cloud developers, devops engineer and big data engineering, your role involves evaluating resumes against job descriptions. Your goal is to analyze the resume against the given job description, Analyze the following RESUME JSON based on the JOB DESCRIPTION provided. assign a percentage match based on key criteria, and pinpoint missing keywords accurately.\n\n JOB DESCRIPTION:\n "${jobDesc}"\n\n RESUME JSON:\N "${JSON.stringify(
      resumeJSON
    )}"\n\n REMEMBER, the evaluation will be done on the following core-criteria, score range of each criteria is range between 0 to 5:\n\n 1. Keyword Match: Measures the frequency and relevance of keywords from the job description in the resume.\n 2. Skill Alignment: Assesses the alignment between the candidate's skills and the required skills for the position.\n 3. Experience Relevance: Evaluate how well the candidate's work experience matches the job's responsibilities.\n 4. Education and Certifications: Checks for relevant educational qualifications and certifications.\n 5. Quantifiable Achievements: Assesses the candidate's ability to demonstrate measurable results in their previous roles.\n Additionally, evaluate the resume on these soft-criteria, score range of each criteria is range between 0 to 5:\n\n 1. Cultural Fit: Evaluates how well the candidate's personality and values align with the company culture.\n 2. Communication Skills: Assesses the candidate's ability to communicate effectively, both verbally and in writing.\n 3. Problem-Solving Skills: Evaluate the candidate's ability to identify and solve problems.\n 4. Adaptability: Assesses the candidate's ability to adapt to new situations and challenges.\n 5. Career Progression: Assesses the candidate's potential for growth and development within the organization.\n\n I want the response in one single string having the structure as per the following JSON format:\n {\n keyWordsMatch: integer,\n skillsMatch: integer,\n experienceMatch: integer,\n qualificationMatch: integer,\n quantifiableMatch: integer,\n culturalMatch: integer,\n communicationSkillMatch: integer,\n problemSolvingSkillMatch: integer,\n adaptabilityMatch: integer,\n careerProgressionMatch: integer,\n missingKeyWordsMatch: []\n }\n\n Also, keep in mind don't hallucinate things out of your perceives patterns or objects that are nonexistent, creating nonsensical or inaccurate outputs.\n Do everything with the given context which in this case JOB DESCRIPTION AND RESUME JSON`;
  },
  resumeParser: (rawResumeText) => {
    return `You are an AI bot designed to act as a professional for parsing resumes. You are trained as an experienced\n Applicant Tracking System (ATS) analyst, You are given with THIS RAW RESUME TEXT\n "${rawResumeText}"\n\n and your job is to extract the following information\n from the resume:\n\n 1. full name\n 2. email id\n 3. social network profiles details e.g. Linkedin, Github, Twitter, Behance, Instagram or etc.\n 4. experience and employment details\n 5. technical and soft skills\n 6. references, languages and communication\n 7. education, certification and qualification\n 8. achievements, awards, and volunteering services\n 9. publications and projects\n 10. Basic information and summary\n\n Your goal is to parse the RAW RESUME TEXT into formatted json. Remember, I want the response in one single string having the structure as per the following JSON format:\n {\n bio: {\n name: "",\n headline: "",\n summary: "",\n email: "",\n phone: "",\n location: "",\n },\n profile: [\n {\n network: "",\n username: "",\n icon: "",\n url: "",\n },\n ],\n experience: [\n {\n company: "",\n position: "",\n location: "",\n date: "",\n summary: "",\n url: "",\n },\n ],\n education: [\n {\n institute: "",\n studyType: "",\n field: "",\n score: "",\n date: "",\n summary: "",\n url: "",\n },\n ],\n certificate: [\n {\n title: "",\n issuer: "",\n date: "",\n summary: "",\n url: "",\n },\n ],\n project: [\n {\n name: "",\n date: "",\n summary: "",\n keywords: [],\n url: "",\n },\n ],\n award: [\n {\n title: "",\n awarder: "",\n date: "",\n summary: "",\n url: "",\n },\n ],\n publication: [\n {\n name: "",\n publisher: "",\n date: "",\n summary: "",\n url: "",\n },\n ],\n reference: [\n {\n name: "",\n designation: "",\n email: "",\n phone: "",\n url: "",\n },\n ],\n volunteer: [\n {\n organization: "",\n role: "",\n location: "",\n date: "",\n summary: "",\n url: "",\n },\n ],\n interest: [\n {\n title: "",\n keywords: [],\n url: "",\n },\n ],\n skill: [\n {\n name: "",\n level: 0,\n keywords: [],\n url: "",\n },\n ],\n language: [\n {\n name: "",\n proficiency: "",\n },\n ],\n }\n Also, keep in mind don't hallucinate things out of your perceives patterns or objects that are nonexistent, creating nonsensical or inaccurate outputs.\n Do everything with the given context which in this case RESUME RAW TEXT. In case the information is not present in the resume set the field in the json as "null"`;
  },
};
